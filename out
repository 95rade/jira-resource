#!/bin/bash

get_text() {
    # Get text and text file path
    text=$(jq "(.params.${1} // \"\${FILE_CONTENT}\")" < "${payload}")
    text_file=$(jq -r ".params.$1_file // \"\"" < "${payload}")

    # Get text file content
    FILE_CONTENT=""
    if [[ -n ${text_file} ]]
    then
        if [[ -f ${text_file} ]]
        then
            FILE_CONTENT="$(cat "${text_file}")"

            [[ -z ${FILE_CONTENT} ]] && FILE_CONTENT="_(no file content)_"
        else
            FILE_CONTENT="_(file not found)_"
        fi
    fi

    # Attempt to str_replace $FILE_CONTENT in text with file content
    text="$(eval printf ${text})"

    # Set empty text stub and json encode
    [[ -z ${text} ]] && text="_(missing text)_"
    text=$(echo "${text}" | jq -R -s .)

    # Remove tailing newline
    text=$(echo "${text}" | sed -E 's/\\n"$/"/')

    echo ${text}
}

set -e

cd ${1}

exec 3>&1
exec 1>&2

# for jq
PATH=/usr/locs/bin:$PATH

payload=$(mktemp /tmp/resource-in.XXXXXX)

cat > ${payload} <&0

silent=$(jq -r '.params.silent // "true"' < "${payload}")

api_url=$(jq -r '.source.url' < "${payload}")
username=$(jq -r '.source.username' < "${payload}")
password=$(jq -r '.source.password' < "${payload}")
project=$(jq -r '.source.project' < "${payload}")

issue_type=$(jq -r '.params.issue_type' < "${payload}")

summary=$(get_text "summary")
description=$(get_text "description")

body=$(cat <<EOF
{
  "fields": {
    "project": {
      "key": "${project}"
    },
    "issuetype": {
      "name": "${issue_type}"
    },
    "summary": ${summary},
    "description": ${description}
  }
}
EOF
  )

curl_command="curl -D- -u ${username}:${password} -X POST -H 'Content-Type: application/json' --data #body# ${api_url}/rest/api/2/issue/"

if [[ ${DEBUG} == "true" ]]
then
        json="$(cat <<EOF
{
  "curl": $(echo ${curl_command} | jq -R .),
  "body": ${body}
}
EOF
)"
    echo "$json"
    exit 0
fi

body=$(echo ${body} | jq -c '.')
curl_command=$(echo ${curl_command} | sed "s/#body#/'${body}'/g")
eval $curl_command

jq -n "{version:{timestamp:\"$(date +%s)\"}}" >&3
